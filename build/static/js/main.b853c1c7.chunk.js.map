{"version":3,"sources":["store/globalStore.js","store/index.js","components/PrivateRoute/index.js","utils/http.js","pages/login/index.js","utils/index.js","pages/panel/index.js","pages/cookie/cookie.js","pages/uploadFile/uploadFile.js","pages/socket/socket.js","pages/gzip/gzip.js","App.js","reportWebVitals.js","index.js"],"names":["isLogin","window","localStorage","getItem","makeObservable","this","observable","setLoginStatus","action","flag","removeItem","store","globalStore","PrivateRoute","console","log","rest","props","Cmp","children","component","to","pathname","Component","instance","axios","create","baseURL","timeout","headers","withCredentials","urls","request","url","params","defaults","Promise","resolve","reject","post","then","response","data","code","location","href","origin","setItem","catch","err","logout","getCookie","Login","onFinish","values","onFinishFailed","errorInfo","usernameChange","e","value","target","setState","username","passwordChange","password","submit","state","res","message","success","msg","warning","history","push","className","name","size","labelCol","span","wrapperCol","initialValues","remember","Item","label","rules","required","placeholder","onChange","Password","valuePropName","offset","type","htmlType","onClick","withRouter","getRandomColor","parseInt","Math","random","Panel","color","Cookie","UploadFile","getList","list","selectFile","myRef","current","click","upload","file","files","form","FormData","append","deleteFile","filePath","downloadFile","open","React","createRef","ref","map","i","DownloadOutlined","DeleteTwoTone","path","Socket","Gzip","App","inject","observer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b853c1c7.chunk.js","sourcesContent":["import {makeObservable, observable, action} from 'mobx'\n\nclass GlobalStore {\n  isLogin = window.localStorage.getItem('Authorization') ? true : false\n\n  constructor () {\n    makeObservable(this, {\n      isLogin: observable,\n      setLoginStatus: action\n    });\n  }\n\n  setLoginStatus (flag) {\n    this.isLogin = flag\n    if (!flag) {\n      window.localStorage.removeItem('Authorization')\n    }\n  }\n\n}\n\nexport default new GlobalStore()","import globalStore from './globalStore'\n\nconst store = {\n  globalStore\n}\nexport default store","import { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport globalStore from '../../store/globalStore'\n\nclass PrivateRoute extends Component {\n\n  componentDidMount () {\n    console.log(this)\n  }\n  render () {\n    const {...rest } = this.props\n    const { isLogin } = globalStore\n    const Cmp = this.props.children\n    console.log(isLogin, globalStore, 'privateRouter')\n    return (\n      isLogin ? \n        <Route\n          {...rest}\n          component={Cmp}\n        /> :\n        <Redirect to={{pathname: '/login'}}></Redirect>\n    )\n  }\n}\n\nexport default PrivateRoute","import axios from 'axios'\nimport {\n  // BrowserRouter as Router,\n  // Switch,\n  // Route,\n  // Link,\n  // Redirect,\n  // useHistory,\n  // useLocation\n} from \"react-router-dom\";\nimport globalStore from '../store/globalStore'\n\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:3002/api/',\n  timeout: 5000,\n  headers: {\n    'Authorization': localStorage.getItem('Authorization')\n  },\n  withCredentials: true\n});\n\nconst urls = {\n  login: '/login',\n  logout: '/private/logout',\n  uploadFile: '/private/uploadFile',\n  getFileList: '/private/getFileList',\n  delete: '/private/delete',\n  cookie: '/private/cookie',\n}\n\nfunction request (url, params) {\n  if (localStorage.getItem('Authorization')) {\n    instance.defaults.headers['Authorization'] = localStorage.getItem('Authorization')\n  }\n  return new Promise((resolve, reject) => {\n    instance.post(url, params).then((response) => {\n      console.log(response)\n      if (response.data.code === 401) {\n        globalStore.setLoginStatus(false)\n        window.location.href = window.location.origin + '/login'\n      }\n      if (response.headers['www-authenticate']) {\n        localStorage.setItem('Authorization', response.headers['www-authenticate'])\n        globalStore.setLoginStatus(true)\n      }\n      resolve(response.data)\n    }).catch(err => {\n      reject(err)\n    })\n  })\n}\n\nexport const login = (params) => {\n  return request(urls.login, params)\n}\n\nexport const logout = (params) => {\n  return request(urls.logout, params)\n}\n\nexport const uploadFile = (params) => {\n  return request(urls.uploadFile, params)\n}\n\nexport const getFileList = (params) => {\n  return request(urls.getFileList, params)\n}\nexport const deleteFile = (params) => {\n  return request(urls.delete, params)\n}\nexport const getCookie = (params) => {\n  return request(urls.cookie, params)\n}","import {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport { Form, Input, Button, Checkbox, message } from 'antd';\n// import { inject } from 'mobx-react'\nimport globalStore from '../../store/globalStore'\nimport { login } from '../../utils/http'\n\nimport './index.css'\n\n// @inject('globalStore')\nclass Login extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      username: ''\n    }\n  }\n\n  componentDidMount () {\n    const { isLogin } = globalStore\n    if (isLogin) {\n      this.props.history.push('/panel')\n    }\n  }\n\n  onFinish = (values) => {\n    console.log('Success:', values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  usernameChange = (e) => {\n    const { value } = e.target\n    console.log(value, 'change')\n    this.setState({\n      username: value\n    })\n  }\n\n  passwordChange = (e) => {\n    const { value } = e.target\n    this.setState({\n      password: value\n    })\n  }\n\n  submit = (e) => {\n    const { username, password } = this.state\n    login({\n      username,\n      password\n    }).then((res) => {\n      if (res.code === 1) {\n        message.success(res.msg)\n      }\n      if (res.code === 2) {\n        message.warning(res.msg)\n      }\n      console.log(this.props, this.props.history)\n      // globalStore.setLoginStatus(true)\n      this.props.history.push('/panel')\n      console.log('globalStore', globalStore)\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"login wh-full flex jc-c ai-c\">\n        <div className=\"content flex jc-c ai-c\">\n          <Form\n            name=\"basic\"\n            className=\"form\"\n            size=\"middle\"\n            labelCol={{\n              span: 8,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n            initialValues={{\n              remember: true\n            }}\n            onFinish={this.onFinish}\n            onFinishFailed={this.onFinishFailed}\n          >\n            <Form.Item\n              label=\"Username\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your username!',\n                },\n              ]}\n            >\n              <Input placeholder=\"请输入\" onChange={this.usernameChange}/>\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n              ]}\n            >\n              <Input.Password placeholder=\"请输入密码\" onChange={this.passwordChange} />\n            </Form.Item>\n\n            <Form.Item\n              name=\"remember\"\n              valuePropName=\"checked\"\n              wrapperCol={{\n                offset: 8,\n                span: 16,\n              }}\n            >\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <Form.Item\n              wrapperCol={{\n                offset: 8,\n                span: 16,\n              }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\" onClick={this.submit}>\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Login)","export const getRandomColor = () => {\n  let colors = ['magenta', '#ff7a45', 'volcano', 'volcano', 'gold', 'lime', 'green', 'cyan', 'blue', 'geekblue', 'purple', '#fadb14']\n  let index = parseInt(Math.random()*10)\n  return colors[index]\n}","import {Component} from 'react'\nimport { Tag } from 'antd';\nimport { getRandomColor } from '../../utils'\nimport { Link } from 'react-router-dom'\nimport store from '../../store'\n\nimport './index.css'\n\nclass Panel extends Component {\n\n  componentDidMount () {\n    console.log('panel', store)\n  }\n\n  render () {\n    return (\n      <div>\n        <div className=\"title text-center\">前后端接口测试</div>\n          <ul className=\"mt40 flex jc-sb wrap\">\n            <li className=\"mr40\"><Link to=\"/cookie\"><Tag className=\"ft24 my-tag text-center pointer\" color={getRandomColor()}>cookie</Tag></Link></li>\n            <li className=\"mr40\"><Link to=\"/uploadFile\"><Tag className=\"ft24 my-tag text-center pointer\" color={getRandomColor()}>文件上传</Tag></Link></li>\n            <li className=\"mr40\"><Link to=\"/socket\"><Tag className=\"ft24 my-tag text-center pointer\" color={getRandomColor()}>web socket</Tag></Link></li>\n            <li className=\"mr40\"><Link to=\"/gzip\"><Tag className=\"ft24 my-tag text-center pointer\" color={getRandomColor()}>开启gzip</Tag></Link></li>\n          </ul>\n      </div>\n    )\n  }\n}\n\nexport default Panel","import { Component } from 'react'\nimport {Button, message} from 'antd'\nimport { getCookie } from '../../utils/http'\n\nclass Cookie extends Component {\n  getCookie = () => {\n    getCookie().then(() => {\n      message.success('cookie 下发成功')\n    })\n  }\n  render () {\n    return (<div className=\"mt40\">\n      <div className=\"handles flex jc-sb\">\n        <Button onClick={this.getCookie}>模拟登录</Button>\n      </div>\n    </div>)\n  }\n}\n\nexport default Cookie","import React, {Component} from 'react'\nimport {Button} from 'antd'\nimport {DeleteTwoTone, DownloadOutlined} from \"@ant-design/icons\"\nimport { uploadFile, getFileList, deleteFile } from '../../utils/http'\n\nimport './uploadFile.css'\n\nclass UploadFile extends Component {\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef()\n    this.state = {\n      list: []\n    }\n  }\n\n  componentDidMount () {\n    this.getList()\n  }\n\n  getList = () => {\n    getFileList().then((res) => {\n      console.log('getFileList', res)\n      this.setState({\n        list: res.data.list\n      })\n    })\n  }\n\n  selectFile = () => {\n    this.myRef.current.click()\n  }\n  upload = (e) => {\n    console.log(e)\n    const file = e.target.files[0]\n    // const reader = new FileReader()\n    const form = new FormData()\n    form.append('file', file)\n    uploadFile(form).then(() => {\n      this.getList()\n    })\n  }\n\n  deleteFile =  (filePath) => {\n    deleteFile({filePath}).then(() => {\n      this.getList()\n    })\n  }\n\n  downloadFile = (url) => {\n    window.open(url)\n  }\n\n  render () {\n    return (\n      <div>\n        <div className=\"mt40 flex jc-c ai-c\">\n          <Button type=\"primary\" onClick={this.selectFile}>上传文件</Button>\n          <input ref={this.myRef} className=\"display-none\" type=\"file\" onChange={this.upload} />    \n        </div>\n        <div className=\"list mt40\">\n          {\n            this.state.list.map((i) => {\n              return <div className=\"list-item flex jc-sb\">\n                <div className=\"name\">{i.name}</div>\n                <div className=\"handles pointer\">\n                  <DownloadOutlined onClick={() => {this.downloadFile(i.url)}}/>\n                  <DeleteTwoTone onClick={() => {this.deleteFile(i.path)}}/>\n                </div>\n              </div>\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UploadFile\n","import { Component } from 'react'\n\nclass Socket extends Component {\n  render () {\n    return (\n      <div>创建一个socket</div>\n    )\n  }\n}\n\nexport default Socket","import { Component } from 'react'\n\nclass Gzip extends Component {\n  render () {\n    return (\n      <div>gzip</div>\n    )\n  }\n}\n\nexport default Gzip","import { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link,\n  Redirect,\n  // useHistory,\n  // useLocation\n} from \"react-router-dom\";\nimport { observer, inject } from 'mobx-react'\n// import globalStore from './store/index'\nimport PrivateRoute from './components/PrivateRoute/'\nimport Login from './pages/login'\nimport Panel from './pages/panel'\nimport Cookie from './pages/cookie/cookie'\nimport UploadFile from './pages/uploadFile/uploadFile'\nimport Socket from './pages/socket/socket'\nimport Gzip from './pages/gzip/gzip'\nimport { Button } from 'antd'\nimport { logout } from './utils/http'\nimport './App.css';\n\n@inject('globalStore')\n@observer\nclass App extends Component {\n\n  componentDidUpdate () {\n    console.log('mountex', this.props.globalStore)\n  }\n\n  logout = () => {\n    logout().then(() => {\n      this.props.globalStore.setLoginStatus(false)\n      window.location.href = window.location.origin + '/login'\n    })\n  }\n  \n  render () {\n    const {isLogin} = this.props.globalStore\n    console.log(isLogin, 'app')\n    return (\n      <div className=\"App wh-full\">\n        <Router>\n          <div className=\"home\">\n            {\n              isLogin ? <div>已登录<Button onClick={this.logout} type=\"link\" size=\"small\">【退出】</Button></div> : null\n            }\n            {\n              isLogin ? <Redirect to=\"/panel\"/> :\n              <Redirect to=\"/login\"/>\n            }\n          </div>\n          <Switch>\n              <Route path=\"/login\"><Login /></Route>\n              <PrivateRoute path=\"/panel\">\n                <Panel/>\n              </PrivateRoute>\n              <PrivateRoute path=\"/cookie\">\n                <Cookie/>\n              </PrivateRoute>\n              <PrivateRoute path=\"/uploadFile\">\n                <UploadFile/>\n              </PrivateRoute>\n              <PrivateRoute path=\"/socket\">\n                <Socket/>\n              </PrivateRoute>\n              <PrivateRoute path=\"/gzip\">\n                <Gzip/>\n              </PrivateRoute>\n            </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'mobx-react'\nimport store from './store'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider {...store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}